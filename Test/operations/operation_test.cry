#Simple crystal code for testing

def main()
  print_color("Additive Operations:", 11)
  x = 2
  x += 2.5 + x
  print(x)
  #x = 8
  x = 2
  x += x += x
  print(x)

  print_color("Subtractive Operations:", 11)
  y = 32
  y -= 10.5
  print(y)

  print_color("Multiplicative Operations:", 11)
  y = 10
  y *= 10
  print(y)
  
  print_color("Exponent Operations:", 11)
  y = 2
  y ^= 10
  print(y)

  print_color("Nil Assignments:", 11)
  z += 1
  print(z)
  z = 5
  z -= nil
  print(z)

  print_color("Equivalent Operations:", 11)
  print(2 != 4)
  print("Hello" != "Hello")
  flag = ("Hello" != "World") == false
  print(flag)
  print(PI != PI)
  flag = false
  print((true != flag) == false)
  flag = 1.5
  print("World" == flag)
  flag2 = 1.5
  print(obscure_nil != 2.4)
  print_color("Less Operations:", 10)
  print(2 < 4)
  x = 7.5
  y = 6.0
  print(x <= y)
  print_color("Greater Operations:", 10)
  print(2 > 4)
  print(x >= y)
  print_color("Variable Equivalent:", 10)
  val = 1
  val2 = 1
  print(val + " != " + val2 + ": " + (val != val2))
  val2 += 1
  print(val + " != " + val2 + ": " + (val != val2))
  val2 -= 1
  print(val + " == " + val2 + ": " + (val == val2))
  print("")
  
  print_color("Swap Operations:", 14)
  x = "New " + "string"
  y = 10.54
  print("x: " + x)
  print("y: " + y + "\n")
  x <> y
  print("x: " + x)
  print("y: " + y)
  
  return "Done"
end
def obscure_nil()
  return 2.5
end