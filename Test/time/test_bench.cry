def main()
  val = 10 ^ 7
  start_time = time()
  print("\nTiming Test using Standard Operations:")
  while(val)
    val -= 1
  end
  print(((time() - start_time) / 1000.0) + " seconds")

  x = "hello"
  
  print("World" + x)
  
  #Call a clock function using sleep
  print_color("\nEnter \"accurate\" for a precise clock.", 11)
  print_color("Otherwise the default clock will be used.", 11)
  choice = input
  
  print(choice == "accurate")
  if(choice == "accurate")
    print_color("accurate clock", 12)
  	accurate_clock()
  else
	  clock()
  end
end

def clock()
  x = 100
  y = 0
  start_time = time()
  while(true)
    print("Total wait: " + y / 1000.0 + " seconds")
    print("Actual wait: " + ((time() - start_time) / 1000.0) + " seconds")
    print(val)
    sleep(x)
    y += x
  end
end


def accurate_clock()
  x = 100
  y = 0
  base_time = start_time = time
  while(true)
    print("Total wait: " + y / 1000.0 + " seconds")
    print("Actual wait: " + ((time - base_time) / 1000.0) + " seconds")

    # Wait loop
    while((time - start_time) < x)
      #prevent thrashing
      sleep(2)
    end

    y += (time - start_time)
    start_time = time
  end
end
